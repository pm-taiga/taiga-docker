version: '2'

volumes:
  postgres_data: {}
  postgres_backup: {}
  taiga_backend_media: {}

services:
  postgresql:
    image: postgres:10-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_backup:/backups
    environment:
      - POSTGRES_DB={{POST_GRES_SQL_NAME}}
      - POSTGRES_USER={{POST_GRES_SQL_USER}}
      - POSTGRES_PASSWORD={{POST_GRES_SQL_PASSWORD}}

  # postgresql管理软件（可以选择关闭）
  # 使用介绍：https://hub.docker.com/r/dpage/pgadmin4
  # http://www.fecshop.com/topic/1470
  pgadmin4:
        image: dpage/pgadmin4:4.8
        ports:
            - 8001:80
        environment:
            PGADMIN_DEFAULT_EMAIL: 111@qq.com
            PGADMIN_DEFAULT_PASSWORD: 123

  redis:
    image: redis:4.0-alpine

  rabbitmq:
    image: rabbitmq:3.6-alpine
    hostname: taiga_rabbitmq
    environment:
      # https://www.rabbitmq.com/clustering.html#erlang-cookie
      - RABBITMQ_ERLANG_COOKIE='secret_cookie_here'
      - RABBITMQ_DEFAULT_USER=taiga
      - RABBITMQ_DEFAULT_PASS=taiga
      - RABBITMQ_DEFAULT_VHOST=taiga
      # http://www.rabbitmq.com/configure.html#config-items
      # - RABBITMQ_HIPE_COMPILE=1

  backend:
    build: temp/backend/
    volumes:
      - {{PROJECT_BASE_IN_HOST}}/submodule/taiga-back:{{TAIGA_HOME}}/taiga-back
      - taiga_backend_media:/taiga_backend/media
      - /taiga_backend/static-root
    user: taiga
    entrypoint: ['{{TAIGA_HOME}}/scripts/entrypoint.sh']
    # command: ['gunicorn', '--worker-class', 'gevent', '--workers', '10', '-b', '0.0.0.0:8000', 'taiga.wsgi']
    command: ['gunicorn', '-b', '0.0.0.0:8000', 'taiga.wsgi']

  # use dist version
  frontend:
    build: temp/frontend/
    volumes:
      # dist
      # - {{PROJECT_BASE_IN_HOST}}/submodule/taiga-front-dist/dist:{{TAIGA_HOME}}/taiga-front-dist/dist
      # self dist
      - {{PROJECT_BASE_IN_HOST}}/submodule/taiga-front/dist:{{TAIGA_HOME}}/taiga-front-dist/dist
      - taiga_backend_media:/taiga_backend/media
      - /taiga_backend/static-root
    ports:
      - "80:80"
    depends_on:
      # It would be better to add 'postgres' to 'depends_on' on 'backend' service
      # but 'celeryworker' extends 'backend' and we cannot extend a service
      # if it is using 'depends_on'.
      - postgresql
      - backend
      - events

  celeryworker:
    extends: backend
    entrypoint: []
    # command: ['celery', '-A', 'taiga', 'worker', '-c', '4', '--loglevel', 'info']
    command: ['celery', '-A', 'taiga', 'worker', '-P', 'gevent', '-c', '4', '--loglevel', 'info']
    depends_on:
      - redis
      - rabbitmq

  events:
    build: temp/events/
    volumes:
      - {{PROJECT_BASE_IN_HOST}}/submodule/taiga-events:{{TAIGA_HOME}}/taiga-events
    depends_on:
      - rabbitmq
